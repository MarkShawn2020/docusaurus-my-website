"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[29658],{35318:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},12294:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>m,default:()=>b,frontMatter:()=>d,metadata:()=>f,toc:()=>g});var a=n(35318),r=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&u(e,n,t[n]);if(c)for(var n of c(t))s.call(t,n)&&u(e,n,t[n]);return e};const d={},m="feat(theme-common): added interface for locale char mapping",f={unversionedId:"coding/Software/Docusaurus/PR-added-interface-for-local-char-mapping",id:"coding/Software/Docusaurus/PR-added-interface-for-local-char-mapping",title:"feat(theme-common): added interface for locale char mapping",description:"\x3c!--",source:"@site/my-documents/docs/coding/Software/Docusaurus/PR-added-interface-for-local-char-mapping.md",sourceDirName:"coding/Software/Docusaurus",slug:"/coding/Software/Docusaurus/PR-added-interface-for-local-char-mapping",permalink:"/docs/coding/Software/Docusaurus/PR-added-interface-for-local-char-mapping",draft:!1,editUrl:"https://github.com/markshawn2020/docusaurus/edit/master/my-documents/docs/coding/Software/Docusaurus/PR-added-interface-for-local-char-mapping.md",tags:[],version:"current",lastUpdatedAt:1726564669,formattedLastUpdatedAt:"2024\u5e749\u670817\u65e5",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"enhance: added ESLint ruler for CSS import",permalink:"/docs/coding/Software/Docusaurus/PR-ESLint-added-CSS-imports"},next:{title:"docusaurus-track",permalink:"/docs/coding/Software/Docusaurus/docusaurus-track"}},h={},g=[{value:"Pre-flight checklist",id:"pre-flight-checklist",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Demo",id:"demo",level:2},{value:"Related issues/PRs",id:"related-issuesprs",level:2}],y={toc:g};function b(e){var t,n=e,{components:r}=n,u=((e,t)=>{var n={};for(var a in e)l.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&c)for(var a of c(e))t.indexOf(a)<0&&s.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=p(p({},y),u),o(t,i({components:r,mdxType:"MDXLayout"}))),(0,a.kt)("h1",p({},{id:"feattheme-common-added-interface-for-locale-char-mapping"}),"feat(theme-common): added interface for locale char mapping"),(0,a.kt)("h2",p({},{id:"pre-flight-checklist"}),"Pre-flight checklist"),(0,a.kt)("ul",p({},{className:"contains-task-list"}),(0,a.kt)("li",p({parentName:"ul"},{className:"task-list-item"}),(0,a.kt)("input",p({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","I have read the ",(0,a.kt)("a",p({parentName:"li"},{href:"https://github.com/facebook/docusaurus/blob/main/CONTRIBUTING.md#pull-requests"}),"Contributing Guidelines on pull requests")," ."),(0,a.kt)("li",p({parentName:"ul"},{className:"task-list-item"}),(0,a.kt)("input",p({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ",(0,a.kt)("strong",{parentName:"li"},"If this is a code change"),": I have written unit tests and/or added dogfooding pages to fully verify the new behavior."),(0,a.kt)("li",p({parentName:"ul"},{className:"task-list-item"}),(0,a.kt)("input",p({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ",(0,a.kt)("strong",{parentName:"li"},"If this is a new API or substantial change"),": the PR has an accompanying issue (closes #0000) and the maintainers have approved on my working plan.")),(0,a.kt)("h2",p({},{id:"motivation"}),"Motivation"),(0,a.kt)("p",null,"In order to solve the problem of classifying non-eng blog tags mentioned in #7843 , considering about the efficiency and extensibility, I finally managed to add an interface naming ",(0,a.kt)("inlineCode",{parentName:"p"},"charMap")," in ",(0,a.kt)("inlineCode",{parentName:"p"},"I18nLocaleConfig")," which is integrated with the current API nicely."),(0,a.kt)("p",null,"The work of updating documentation is also acceptable if this PR could be accepted."),(0,a.kt)("h2",p({},{id:"demo"}),"Demo"),(0,a.kt)("p",null,"In order to use this new API, we need to provide the initial ",(0,a.kt)("inlineCode",{parentName:"p"},"charMap")," in our app level manually. Here is a demo for someone need:"),(0,a.kt)("pre",null,(0,a.kt)("code",p({parentName:"pre"},{className:"language-js"}),"// docusaurus.config.js\n\n// the charMap you can easily find at e.g. https://github.com/guoyunhe/pinyin-json/blob/master/hanzi-pinyin-table.json\n// attention to our interface is `one char --\x3e one string` (so you need to convert `string[]` to `string` manually if you use the above data)\n/** @type {import(\"@docusaurus/types/src/i18n\").CharMap} */\nconst charMap = {\n  \u6d4b: 'ce',\n  \u8bd5: 'shi',\n};\n\n/** @type {import('@docusaurus/types').Config} */\nmodule.exports = {\n  i18n: {\n    defaultLocale: 'zh-Hans',\n    locales: ['zh-Hans'],\n    localeConfigs: {\n      'zh-Hans': {\n        charMap,\n      },\n    },\n  },\n};\n")),(0,a.kt)("p",null,"Then you can got the ideal effect when you open your blog tags page at: http://localhost:3000/blog/tags"),(0,a.kt)("img",{width:"1165",alt:"image",src:"https://user-images.githubusercontent.com/33591398/181509388-3b2e7581-059e-4cee-9061-a52765cc7a11.png"}),(0,a.kt)("h2",p({},{id:"related-issuesprs"}),"Related issues/PRs"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"#7843")))}b.isMDXComponent=!0}}]);